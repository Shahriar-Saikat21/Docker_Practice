services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - ./.env 
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persistent storage
    ports:
      - "5431:5432"
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - ./.env  # Using .env for pgAdmin credentials
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - my_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nest_backend
    env_file:
      - ./backend/.env  # Load backend-specific environment variables
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3001:3000"   # Map container port 3000 to host port 3001
    volumes:
      - ./backend:/app       # Mount the local backend folder for live changes
      - /app/node_modules     # Prevent overwriting node_modules with an empty host folder
    networks:
      - my_network
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - TAILWIND_MODE=watch
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app       # Mount the local frontend folder for live changes
      - /app/node_modules     # Prevent overwriting node_modules with an empty host folder
    networks:
      - my_network

volumes:
  pgdata:
    driver: local

networks:
  my_network:
    driver: bridge